{% layout "base.liquid" %}
{% block content %}
<link rel="stylesheet" href="{{baseurl}}assets/css/letter.css" media="screen" charset="utf-8">
<div id="TEI">
</div>
<script src="{{baseurl}}assets/js/CETEI.js"></script>
<script>
  function swapping(myButton){
    //init choice variable based on where the button was placed
    let choice = myButton.previousSibling.previousSibling;
    //get children of choice
    let children = choice.childNodes;
    //if the button is inactive, execute this
    if(myButton.class == "inactive"){
      //get text from orig
      let orig = children[0].textContent;
      //swap
      children[0].textContent = children[1].textContent;
      children[1].textContent = orig;
      //swap class to active
      myButton.class = "active";
    //if the button is active, execute this
    }else if(myButton.class = "active"){
      //get text from orig, which was from reg originally
      let reg = children[0].textContent;
      //swap
      children[0].textContent = children[1].textContent;
      children[1].textContent = reg;
      //swap class to inactive
      myButton.class = "inactive";
    }
  };
</script>
<script>
  var CETEIcean = new CETEI();
  function insertAfter(newNode, referenceNode) {
    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
}
    let behaviors = {
    "tei": {
      "lb" : function(elt){
        //insert break tag after every lb
        let linebreak = document.createElement("br");
        insertAfter(linebreak, elt);
      },
      "closer": function(elt){
        //add inline style
        let style = document.createAttribute("style");
        style.value = "text-align: right;";
        elt.setAttributeNode(style);
      },
      "emph": function(elt){
        //add inline style
        let style = document.createAttribute("style");
        style.value = "text-decoration: underline; font-style: normal;";
        elt.setAttributeNode(style);
      },
      "p": function(elt){
        //add inline style
        let style = document.createAttribute("style");
        style.value = "padding-left: 1.3em";
        elt.setAttributeNode(style);
      },
      "choice": function(elt){
        //create button with text "swap choice"
        let button = document.createElement("button");
        let text = document.createTextNode("swap choice")
        button.appendChild(text);
        //create attributes
        let state = document.createAttribute("class");
        let style = document.createAttribute("style");
        let click = document.createAttribute("onclick");
        //start button as class "inactive"
        state.value = "inactive";
        //make it have 20px size
        style.value = "padding-left: 10px; padding-right: 10px; margin-left: 50px;";
        //onclick, run the swapping function and pass it the button element
        click.value = "swapping(this)";
        button.setAttributeNode(style);
        button.setAttributeNode(state);
        button.setAttributeNode(click);
        //insert the button after the text node following the choice
        insertAfter(button, elt.nextSibling);
      }
    }
  };
  CETEIcean.addBehaviors(behaviors);
  CETEIcean.getHTML5("{{filename}}", function (data) {
    //parse out data variable
    document.getElementById("TEI").innerHTML = "";
    document.getElementById("TEI").appendChild(data);
    CETEIcean.addStyle(document, data);
  });

    // Alternatively, use then()
    // (new CETEI).getHTML5('testTEI.xml').then(function(data){
    //   document.getElementById("TEI").appendChild(data);
    // });

</script>
<script src="https://hypothes.is/embed.js" async></script>
<!--<script src="/assets/js/castlist.js" type="text/javascript" sync></script>-->
{% endblock %}